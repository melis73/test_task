apiVersion: apps/v1
kind: Deployment
metadata:
  name: bestapp-deployment
  labels:
    app: bestapp
spec:
  replicas: 2                                               #Минимальное количество реплик, работающих всегда, включая наименее загруженное время - ночью
  selector:
    matchLabels:
      app: bestapp
  template:
    metadata:
      labels:
        app: bestapp
    spec:
      affinity:
        podAntiAffinity:                                    #Разносим поды по зонам мультизонального кластера
          preferredDuringSchedulingIgnoredDuringExecution:  #preffered - потому что будут ситуации, когда в пике награзки работают 4 пода, а зоны 3. Тогда
          - weight: 100                                     #мы должны отработать разнесение по зонам только как мягкое условие. Вес 100 - чтобы повысить
            podAffinityTerm:                                #влияние этого правила среди других прочих.
              labelSelector:
                matchExpressions:
                - key: bestapp                              #Собственно, условие: если в этой зоне (которая есть лейблом на ноде) уже есть под с лейблом bestapp,
                  operator: In                              #то не скедулить под на эту ноду.
                  values:
                  - bestapp
              topologyKey: topology.kubernetes.io/zone
      containers:
      - name: bestapp
        image: bestapp:1.0.0
        resources:                                          #В условиях написано, что приложение потребляет примерно 128M памяти. Поэтому лимит ставим 256M (чтобы
          requests:                                         #небольшое превышение выше 128M не убивало процесс в контейнере.
            memory: 256Mi                                   #Сколько cpu съедает в пике, в условии не указано, но гораздо больше 100m. Поэтому поставил 300m, чтобы
            cpu: 300m                                       #с запасом. Лимит - это доступный максимум, не важно, в начале, при запуске приложения, или дальше,
          limits:                                           #в процессе работы. Поскольку приложению нужен максимум именно при запуске, то этот максимум и дает
            memory: 256Mi                                   #значение лимита. Requests тоже приходится ставить высоким по сравнению со штатным потреблением в 100m,
            cpu: 300m                                       #когда приложение уже вошло в режим. Потому что если поставить мало, это облегчит поиск ноды с доступным
        ports:                                              #количеством ресурсов, и этих ресурсов хватило бы для работы приложения, но может не хватить для запуска.
        - containerPort: 8080                               
                                                            
